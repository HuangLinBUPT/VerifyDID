maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: >>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), x)>,                envelope_key),            aenc(envelope_key, pk(skH))>) ▶₀ #i
1: !SuperApp( $UserName, $Number, userid ) ▶₁ #i
2: !MPK( $Issuer, appid, pk(x) ) ▶₂ #i
3: !TEELTK( $Holder, userid, skH ) ▶₃ #i
4: !DB( userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
2
3
4
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), x)>,                envelope_key),            aenc(envelope_key, pk(skH))>) ▶₀ #i
1: !SuperApp( $UserName, $Number, userid ) ▶₁ #i
2: !MPK( $Issuer, appid, pk(x) ) ▶₂ #i
3: !TEELTK( $Holder, userid, skH ) ▶₃ #i
4: !DB( userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
2
0
1
4

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

[Saturating Sources] Step 1/5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0:  (last(#i))  ∥ (∃ #h. (!KU( appid ) @ #h) ∧ (¬(last(#h))) ∧ (#h < #i))  ∥ (∃ #h. (Issuer( appid ) @ #h) ∧ ¬(last(#h)))
1: TLSServer_In( 'GET', ~sess, $Issuer, <'userInfo', appid, 'req'>) ▶₀ #i
2: !SuperApp( $UserName, $Number, userid ) ▶₁ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

[Saturating Sources] Step 2/5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: TLSServer_In( 'GET', ~sess, $Issuer, <'userInfo', appid, 'req'>) ▶₀ #i
1: !SuperApp( $UserName, $Number, userid ) ▶₁ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

[Saturating Sources] Step 1/5
[Saturating Sources] Step 2/5
>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), x)>,                envelope_key),            aenc(envelope_key, pk(skH))>) ▶₀ #i
1: !MPK( $Issuer, appid, pk(x) ) ▶₂ #i
2: !TEELTK( $Holder, ~userid, skH ) ▶₃ #i
3: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
2
3
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), x)>,                envelope_key),            aenc(envelope_key, pk(~k))>) ▶₀ #i
1: !SuperApp( $UserName, $Number, ~userid ) ▶₁ #i
2: !MPK( $Issuer, appid, pk(x) ) ▶₂ #i
3: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
2
0
1
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', ~appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), ~k)>,                envelope_key),            aenc(envelope_key, pk(skH))>) ▶₀ #i
1: !TEELTK( $Holder, ~userid, skH ) ▶₃ #i
2: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
2
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', ~appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), ~k)>,                envelope_key),            aenc(envelope_key, pk(~k.1))>) ▶₀ #i
1: !SuperApp( $UserName, $Number, ~userid ) ▶₁ #i
2: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !SuperApp( $UserName, $Number, ~userid ) ▶₁ #i
1: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i
2: !JSAPI( 'importVC', ~appid,        <         senc(<(hash(disclosure)++hash(sensitiveData)),                sign((hash(disclosure)++hash(sensitiveData)), ~k)>,              envelope_key),          aenc(envelope_key, pk(~k.1))>) ▶₀ #vr.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', ~appid,          <           senc(<(hash(disclosure)++hash(sensitiveData)),                  sign((hash(disclosure)++hash(sensitiveData)), ~k)>,                envelope_key),            aenc(envelope_key, pk(~k.1))>) ▶₀ #i
1: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !DB( ~userid, disclosure, sensitiveData ) ▶₄ #i
1: !JSAPI( 'importVC', ~appid,        <         senc(<(hash(disclosure)++hash(sensitiveData)),                sign((hash(disclosure)++hash(sensitiveData)), ~k)>,              envelope_key),          aenc(envelope_key, pk(~k.1))>) ▶₀ #vr.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: JSAPI_In( 'importVC', ~appid,          <           senc(<(hash(~disclosure)++hash(~sensitiveData)),                  sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,                envelope_key),            aenc(envelope_key, pk(~k.1))>) ▶₀ #i

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !JSAPI( 'importVC', ~appid,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,              envelope_key),          aenc(envelope_key, pk(~k.1))>) ▶₀ #vr.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !JSAPI( 'importVC', ~appid,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,              envelope_key),          aenc(envelope_key, pk(~k.1))>) ▶₀ #vr.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~appid ) @ #vk.1
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~appid ) @ #vk.1
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
0
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: TLSServer_In( 'GET', ~sess.1, $Issuer, <'userInfo', ~appid, 'req'>) ▶₀ #vr.17

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
2
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: TLSServer_In( 'GET', ~adversarySess, $Domain,              <'accessInfoReq', ~appid, ~token>) ▶₀ #vr.8
4: TLSServer_In( 'POST', ~sess, $Domain,              <'token_req', ~appid, ~authCode>) ▶₀ #vr.12
5: TLSServer_In( 'GET', ~sess.1, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
4
5
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: TLSServer_In( 'POST', ~adversarySess, $Domain,              <'token_req', ~appid, ~authCode>) ▶₀ #vr.8
4: TLSServer_In( 'GET', ~sess, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
4
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: TLSServer_In( 'POST', ~sess.1, $Issuer,              <'token_req', ~appid, ~authCode.1>) ▶₀ #vr.20
3: TLSServer_In( 'GET', ~sess.2, $Issuer, <'userInfo', ~appid, 'req'>) ▶₀ #vr.22
4: TLSServer_In( 'GET', ~sess.3, $Issuer, <'userInfo', ~appid, 'req'>) ▶₀ #vr.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
2
3
4
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
3: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.3)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
3: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.3)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~appid ) @ #vk.2
1: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.10
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: !KU( hash(~disclosure) ) @ #vk.8
4: !KU( hash(~sensitiveData) ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
0
2
3
4

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.10
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.8
3: !KU( hash(~sensitiveData) ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~appid ) @ #vk.4
1: !KU( ~k ) @ #vk.11
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
3: !KU( hash(~disclosure) ) @ #vk.9
4: !KU( hash(~sensitiveData) ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
1
0
2
3
4

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.12
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.10
3: !KU( hash(~sensitiveData) ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: TLSServer_In( 'GET', ~sess.1, $Issuer, <'userInfo', ~appid, 'req'>) ▶₀ #vr.22

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
2
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.12
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.10
3: !KU( hash(~sensitiveData) ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: TLSServer_In( 'GET', ~sess, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.4
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.12
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.10
3: !KU( hash(~sensitiveData) ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.13
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.6
2: !KU( hash(~disclosure) ) @ #vk.11
3: !KU( hash(~sensitiveData) ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: TLSServer_In( 'POST', ~sess.1, $Domain,              <'token_req', ~appid, ~authCode>) ▶₀ #vr.12
4: TLSServer_In( 'GET', ~sess.2, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.13
5: TLSServer_In( 'GET', ~sess, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.24

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
4
5
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
3: TLSServer_In( 'GET', ~sess, $Domain, <'userInfo', ~appid, 'req'>) ▶₀ #vr.13

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
3
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~adversarySess ) @ #vk.5
1: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.3
2: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( senc(<(hash(~disclosure)++hash(~sensitiveData)),            sign((hash(~disclosure)++hash(~sensitiveData)), ~k)>,          envelope_key)) @ #vk.4
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.12
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.10
3: !KU( hash(~sensitiveData) ) @ #vk.11

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.13
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.6
2: !KU( hash(~disclosure) ) @ #vk.11
3: !KU( hash(~sensitiveData) ) @ #vk.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.10
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.8
3: !KU( hash(~sensitiveData) ) @ #vk.9

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.10
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.8
3: !KU( hash(~sensitiveData) ) @ #vk.9
4: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
5: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.2)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3
4
5

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10
4: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
5: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.2)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3
4
5

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( sign((hash(~disclosure)++hash(~sensitiveData)), ~k) ) @ #vk.10
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.4
2: !KU( hash(~disclosure) ) @ #vk.8
3: !KU( hash(~sensitiveData) ) @ #vk.9
4: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
5: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.2)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3
4
5

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

>>>>>>>>>>>>>>>>>>>>>>>> START INPUT
0: !KU( ~k ) @ #vk.11
1: !KU( aenc(envelope_key, pk(~k.1)) ) @ #vk.5
2: !KU( hash(~disclosure) ) @ #vk.9
3: !KU( hash(~sensitiveData) ) @ #vk.10
4: !JSAPI( 'RequestVP', ~appid, request_VP ) ▶₀ #vr.10
5: !JSAPI( 'importVC', ~appid.1,        <         senc(<(hash(~disclosure)++hash(~sensitiveData)),                sign((hash(~disclosure)++hash(~sensitiveData)), ~k.2)>,              envelope_key.2),          aenc(envelope_key.2, pk(~k.1))>) ▶₀ #vr.12

>>>>>>>>>>>>>>>>>>>>>>>> START OUTPUT
0
1
2
3
4
5

>>>>>>>>>>>>>>>>>>>>>>>> END Oracle call

OK.

==============================================================================
summary of summaries:

analyzed: DIDSuperApp.spthy

  output:          Goal2.spthy
  processing time: 25.95s
  
  SourcesID (all-traces): verified (9 steps)
  NonInjectAuthVCIssurance (all-traces): verified (224 steps)
  integrityOfVC (all-traces): verified (49 steps)

==============================================================================
